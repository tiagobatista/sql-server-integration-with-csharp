@page "/fruits"
@using Microsoft.EntityFrameworkCore
@inject AppDbContext context

<h3>Data from SQL Server</h3>

<ul>
    @foreach (var fruit in fruits)
    {

        <li>@fruit.Id</li>
        <li>@fruit.Name</li>
        <li>@fruit.Color</li>
        <!-- Move the buttons inside the loop to access the correct 'fruit' context -->
        <button @onclick="() => EditFruit(newFruit.Name, newFruit.Color, fruit.Id)">Edit</button>
        <button @onclick="() => DeleteFruit(fruit)">Delete</button>
    }
</ul>

@code {
    private List<Fruit> fruits = new List<Fruit>();

    protected override async Task OnInitializedAsync()
    {
        fruits = await context.Fruits.ToListAsync();
    }
}

<!-- Inputs for adding a new fruit -->
<input @bind="newFruit.Name" placeholder="Enter fruit name" />
<input @bind="newFruit.Color" placeholder="Enter fruit color" />
<button @onclick="AddFruit">Add</button>

@code {
    private Fruit newFruit = new Fruit();

    private async Task AddFruit()
    {
        context.Fruits.Add(newFruit);
        await context.SaveChangesAsync();
        newFruit = new Fruit(); // Clear the input fields after adding
        // Optionally refresh the fruits list after editing
        fruits = await context.Fruits.ToListAsync();
    }

    private async Task EditFruit(string name, string color, int id)
    {
        // Retrieve the fruit from the database
        var fruit = await context.Fruits.FirstOrDefaultAsync(f => f.Id == id);
        if (fruit != null)
        {
            // Update the properties
            fruit.Name = name;
            fruit.Color = color;

            // Save the changes
            await context.SaveChangesAsync();

            // Optionally refresh the fruits list after editing
            fruits = await context.Fruits.ToListAsync();
        }
    }

    private async Task DeleteFruit(Fruit fruit)
    {
        context.Fruits.Remove(fruit);
        await context.SaveChangesAsync();
        // Optionally refresh the fruits list after editing
        fruits = await context.Fruits.ToListAsync();
    }
}
